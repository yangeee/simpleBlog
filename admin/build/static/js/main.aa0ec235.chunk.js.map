{"version":3,"sources":["config/apiUrl.js","Pages/Login.js","Pages/AddArticle.js","Pages/ArticleList.js","Pages/AdminIndex.js","Pages/Main.js","index.js"],"names":["ipUrl","servicePath","checkLogin","getTypeInfo","addArticle","updateArticle","getArticleList","getArticleById","delArticle","Login","props","useState","userName","setUserName","password","setPassword","isLoading","setIsLoading","className","tip","spinning","title","bordered","style","width","id","size","placeholder","prefix","UserOutlined","onChange","e","target","value","Password","InfoCircleOutlined","type","block","onClick","message","error","setTimeout","dataProps","axios","method","url","data","withCredentials","then","res","localStorage","setItem","openId","history","push","Option","Select","TextArea","Input","AddArticle","useEffect","tmpId","match","params","setArticleId","articleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introduceMd","setIntroduceMd","introduceHtml","setIntroduceHtml","showDate","setShowDate","typeInfo","setTypeInfo","selectedTypeId","setSelectType","selectedTypeName","setSelectedTypeName","marked","setOptions","renderer","Renderer","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","changeContent","html","changeIntroduce","header","article_content","introduce","tmpInt","addTime","type_id","i","length","console","log","Id","typeName","gutter","span","map","item","index","rows","onPressEnter","dangerouslySetInnerHTML","__html","dateText","replace","Date","getTime","view_count","Math","ceil","random","insertId","isSuccess","success","date","dateString","confirm","Modal","ArticleList","getList","list","setList","dataSource","renderItem","Item","part_count","content","onOk","onCancel","Header","Layout","Content","Footer","Sider","SubMenu","Menu","AdminIndex","collapsed","setCollapsed","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","AreaChartOutlined","DesktopOutlined","key","FileTwoTone","background","padding","margin","path","exact","component","textAlign","Main","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa0ec235.chunk.js","sourcesContent":["let ipUrl\r\nif(process.env.NODE_ENV === 'development'){\r\n    ipUrl = 'http://127.0.0.1:7001/admin/'\r\n}else{\r\n    ipUrl = 'https://yang.plus/api/admin/'\r\n}\r\n\r\nlet servicePath = {\r\n    checkLogin:ipUrl + 'checkLogin' ,  //  检查用户名密码是否正确\r\n    getTypeInfo:ipUrl + 'getTypeInfo' ,  //  获得文章类别信息\r\n    addArticle:ipUrl + 'addArticle' ,  //  添加文章\r\n    updateArticle:ipUrl + 'updateArticle' ,  //  修改文章\r\n    getArticleList:ipUrl + 'getArticleList' ,  //  文章列表\r\n    getArticleById:ipUrl + 'getArticleById/' ,  //  根据ID获得文章详情\r\n    delArticle:ipUrl + 'delArticle/' ,  //  删除文章\r\n}\r\n\r\nexport default servicePath","import React , {useState,useEffect,createContext} from 'react';\r\nimport 'antd/dist/antd.css'\r\nimport {Card, Input, Button, Spin, message} from 'antd'\r\nimport {InfoCircleOutlined, UserOutlined} from '@ant-design/icons'\r\nimport '@/Login.css'\r\nimport axios from 'axios'\r\nimport servicePath from \"../config/apiUrl\"\r\n\r\nfunction Login(props) {\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    /**\r\n     * 检查密码是否正确\r\n     * @returns {boolean}\r\n     */\r\n    const checkLogin = () => {\r\n        setIsLoading(true)\r\n\r\n        if (!userName) {\r\n            message.error('用户名不能为空')\r\n            setTimeout(()=>{\r\n                setIsLoading(false)\r\n            },500)\r\n            return false\r\n        } else if (!password) {\r\n            message.error('密码不能为空')\r\n            setTimeout(()=>{\r\n                setIsLoading(false)\r\n            },500)\r\n            return false\r\n        }\r\n        let dataProps = {\r\n            'userName': userName,\r\n            'password': password\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: servicePath.checkLogin,\r\n            data: dataProps,\r\n            withCredentials: true\r\n        }).then(\r\n            res => {\r\n                setIsLoading(false)\r\n                if (res.data.data === '登录成功') {\r\n                    localStorage.setItem('openId', res.data.openId)\r\n                    props.history.push('/index')\r\n                } else {\r\n                    message.error('用户名密码错误')\r\n                }\r\n            }\r\n        )\r\n\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1000)\r\n    }\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={isLoading}>\r\n                <Card title=\"s1mple Blog System\" bordered={true} style={{width: 400}}>\r\n                    <Input\r\n                        id=\"userName\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your userName\"\r\n                        prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                        onChange={(e) => {\r\n                            setUserName(e.target.value)\r\n                        }}\r\n                    />\r\n                    <br/><br/>\r\n                    <Input.Password\r\n                        id=\"password\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your password\"\r\n                        prefix={<InfoCircleOutlined/>}\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value)\r\n                        }}\r\n                    />\r\n                    <br/><br/>\r\n                    <Button type=\"primary\" size=\"large\" block onClick={checkLogin}> Login in </Button>\r\n                </Card>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React, {useState, useEffect} from 'react'\r\nimport marked from 'marked'\r\nimport '../static/css/AddArticle.css'\r\nimport {Row, Col, Input, Select, Button, DatePicker, message} from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\n\r\nconst {Option} = Select\r\nconst {TextArea} = Input\r\n\r\nfunction AddArticle(props) {\r\n\r\n  useEffect(() => {\r\n    // 从中台得到文章类别信息\r\n    getTypeInfo()\r\n    // 根据Id判断是否是修改文章\r\n    let tmpId = props.match.params.id\r\n    if (tmpId) {\r\n      setArticleId(tmpId)\r\n      getArticleById(tmpId)\r\n    }\r\n  }, [])\r\n\r\n  const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n  const [articleTitle, setArticleTitle] = useState('')   //文章标题\r\n  const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\r\n  const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\r\n  const [introduceMd, setIntroduceMd] = useState()            //简介的markdown内容\r\n  const [introduceHtml, setIntroduceHtml] = useState('等待编辑') //简介的html内容\r\n  const [showDate, setShowDate] = useState()   //发布日期\r\n  const [updateDate, setUpdateDate] = useState() //修改日志的日期\r\n  const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\r\n  const [selectedTypeId, setSelectType] = useState(0) //选择的文章类别 todo 这里的默认值有问题，应该是0或1或2\r\n  const [selectedTypeName, setSelectedTypeName] = useState('请选择类别') //选择的文章类别\r\n  marked.setOptions({\r\n    renderer: new marked.Renderer(),\r\n    gfm: true,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    tables: true,\r\n    breaks: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n  })\r\n  const changeContent = (e) => {\r\n    setArticleContent(e.target.value)\r\n    let html = marked(e.target.value)\r\n    setMarkdownContent(html)\r\n  }\r\n\r\n  const changeIntroduce = (e) => {\r\n    setIntroduceMd(e.target.value)\r\n    let html = marked(e.target.value)\r\n    setIntroduceHtml(html)\r\n  }\r\n\r\n  //选择类别后的处理函数\r\n  const selectTypeHandler = (value) => {\r\n    setSelectType(value)\r\n  }\r\n  // 得到修改后的文章\r\n  const getArticleById = (id) => {\r\n    axios(servicePath.getArticleById + id, {\r\n      withCredentials: true,\r\n      header: {'Access-Control-Allow-Origin': '*'}\r\n    }).then(\r\n      res => {\r\n        //let articleInfo= res.data.data[0]\r\n        setArticleTitle(res.data.data[0].title)\r\n        setArticleContent(res.data.data[0].article_content)\r\n        let html = marked(res.data.data[0].article_content)\r\n        setMarkdownContent(html)\r\n        setIntroduceMd(res.data.data[0].introduce)\r\n        let tmpInt = marked(res.data.data[0].introduce)\r\n        setIntroduceHtml(tmpInt)\r\n        setShowDate(res.data.data[0].addTime)\r\n        setSelectType(res.data.data[0].type_id)\r\n        let i = 0, length = typeInfo.length\r\n        for (; i < length; i++) {\r\n          console.log(typeInfo[i].Id, selectedTypeId)\r\n          if (typeInfo[i].Id === selectedTypeId) {\r\n            console.log(1111111111)\r\n            setSelectedTypeName(typeInfo[i].typeName)\r\n          }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  // 得到文章类别信息\r\n  const getTypeInfo = () => {\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: servicePath.getTypeInfo,\r\n      header: {'Access-Control-Allow-Origin': '*'},\r\n      withCredentials: true\r\n    }).then(\r\n      res => {\r\n        if (res.data.data === \"没有登录\") {\r\n          // localStorage.removeItem('openId')\r\n          props.history.push('/login')\r\n        } else {\r\n          setTypeInfo(res.data.data)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  //保存文章\r\n  const saveArticle = () => {\r\n    // markedContent()  //先进行转换\r\n    if (!selectedTypeId) {\r\n      message.error('必须选择文章类别')\r\n      return false\r\n    } else if (!articleTitle) {\r\n      message.error('文章名称不能为空')\r\n      return false\r\n    } else if (!articleContent) {\r\n      message.error('文章内容不能为空')\r\n      return false\r\n    } else if (!introduceMd) {\r\n      message.error('简介不能为空')\r\n      return false\r\n    } else if (!showDate) {\r\n      message.error('发布日期不能为空')\r\n      return false\r\n    }\r\n\r\n    let dataProps = {}   //传递到接口的参数\r\n    dataProps.type_id = selectedTypeId\r\n    dataProps.title = articleTitle\r\n    dataProps.article_content = articleContent\r\n    dataProps.introduce = introduceMd\r\n\r\n    let dateText = showDate.replace('-', '/') //把字符串转换成时间戳\r\n    dataProps.addTime = (new Date(dateText).getTime()) / 1000\r\n\r\n    if (articleId === 0) {\r\n      console.log('articleId=:' + articleId)\r\n      dataProps.view_count = Math.ceil(Math.random() * 100) + 1000\r\n      axios({\r\n        method: 'post',\r\n        url: servicePath.addArticle,\r\n        data: dataProps,\r\n        withCredentials: true\r\n      }).then(\r\n        res => {\r\n          setArticleId(res.data.insertId)\r\n          if (res.data.isSuccess) {\r\n            message.success('文章保存成功')\r\n          } else {\r\n            message.error('文章保存失败');\r\n          }\r\n\r\n        }\r\n      )\r\n    } else {\r\n\r\n      dataProps.id = articleId\r\n      axios({\r\n        method: 'post',\r\n        url: servicePath.updateArticle,\r\n        header: {'Access-Control-Allow-Origin': '*'},\r\n        data: dataProps,\r\n        withCredentials: true\r\n      }).then(\r\n        res => {\r\n\r\n          if (res.data.isSuccess) {\r\n            message.success('文章保存成功')\r\n          } else {\r\n            message.error('保存失败');\r\n          }\r\n\r\n\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={5}>\r\n        <Col span={18}>\r\n          <Row gutter={10}>\r\n            <Col span={20}>\r\n              <Input\r\n                placeholder=\"博客标题\"\r\n                size=\"large\"\r\n                value={articleTitle}\r\n                onChange={e => {\r\n                  setArticleTitle(e.target.value)\r\n                }}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={4}>\r\n              &nbsp;\r\n              <Select value={selectedTypeName} size=\"large\" onChange={selectTypeHandler}>\r\n                {\r\n                  typeInfo.map((item, index) => {\r\n                    return (<Option key={item.Id} value={item.Id}>{item.typeName}</Option>)\r\n                  })\r\n                }\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row gutter={10}>\r\n            <Col span={12}>\r\n              <TextArea\r\n                value={articleContent}\r\n                className=\"markdown-content\"\r\n                rows={35}\r\n                onChange={changeContent}\r\n                onPressEnter={changeContent}\r\n                placeholder=\"文章内容\"\r\n              />\r\n\r\n            </Col>\r\n            <Col span={12}>\r\n              <div\r\n                className=\"show-html\"\r\n                dangerouslySetInnerHTML={{__html: markdownContent}}>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={6}>\r\n          <Row>\r\n            <Col span={24}>\r\n              <Button size=\"large\">暂存文章</Button>&nbsp;\r\n              <Button type=\"primary\" size=\"large\" onClick={saveArticle}>发布文章</Button>\r\n              <br/>\r\n            </Col>\r\n            <Col span={24}>\r\n              <br/>\r\n              <TextArea\r\n                rows={4}\r\n                value={introduceMd}\r\n                onChange={changeIntroduce}\r\n                onPressEnter={changeIntroduce}\r\n                placeholder=\"文章简介\"\r\n              />\r\n              <br/><br/>\r\n              <div\r\n                className=\"introduce-html\"\r\n                dangerouslySetInnerHTML={{__html: '文章简介：' + introduceHtml}}>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <div className=\"date-select\">\r\n                <DatePicker\r\n                  onChange={(date, dateString) => setShowDate(dateString)}\r\n                  placeholder=\"发布日期\"\r\n                  size=\"large\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddArticle","import React, {useState, useEffect} from 'react';\r\nimport '../static/css/ArticleList.css'\r\nimport {List, Row, Col, Modal, message, Button, Switch} from 'antd';\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\n\r\nconst {confirm} = Modal;\r\n\r\nfunction ArticleList(props) {\r\n    useEffect(() => {\r\n        getList()\r\n    }, [])\r\n\r\n    const [list, setList] = useState([])\r\n\r\n    //得到文章列表\r\n    const getList = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: servicePath.getArticleList,\r\n            withCredentials: true,\r\n            header: {'Access-Control-Allow-Origin': '*'}\r\n        }).then(\r\n            res => {\r\n                setList(res.data.list)\r\n            }\r\n        )\r\n    }\r\n\r\n    //删除文章\r\n    const delArticle = (id) => {\r\n        confirm({\r\n            title: '确定要删除这篇博客文章吗?',\r\n            content: '如果你点击OK按钮，文章将会永远被删除，无法恢复。',\r\n            onOk() {\r\n                axios(servicePath.delArticle + id, {withCredentials: true}).then(\r\n                    res => {\r\n                        message.success('文章删除成功')\r\n                        getList()\r\n                    }\r\n                )\r\n            },\r\n            onCancel() {\r\n                message.success('没有任何改变')\r\n            },\r\n        })\r\n    }\r\n\r\n    //修改文章\r\n    const updateArticle = (id, checked) => {\r\n        props.history.push('/index/add/' + id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <List\r\n                header={\r\n                    <Row className=\"list-div\">\r\n                        <Col span={8}>\r\n                            <b>标题</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>类别</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>发布时间</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>集数</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>浏览量</b>\r\n                        </Col>\r\n\r\n                        <Col span={4}>\r\n                            <b>操作</b>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                }\r\n                bordered\r\n                dataSource={list}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <Row className=\"list-div\">\r\n                            <Col span={8}>\r\n                                {item.title}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                {item.typeName}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                {item.addTime}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                共<span>{item.part_count}</span>集\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                {item.view_count}\r\n                            </Col>\r\n\r\n                            <Col span={4}>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={() => {\r\n                                        updateArticle(item.id)\r\n                                    }}\r\n                                >\r\n                                    修改\r\n                                </Button>&nbsp;\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        delArticle(item.id)\r\n                                    }}\r\n                                >\r\n                                    删除\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </List.Item>\r\n                )}\r\n            />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ArticleList","import React, {useState} from 'react';\r\nimport {Layout, Menu, Breadcrumb} from 'antd';\r\nimport {AreaChartOutlined, DesktopOutlined, UserOutlined, FileTwoTone} from '@ant-design/icons'\r\nimport '../static/css/AdminIndex.css'\r\nimport {Route} from \"react-router-dom\";\r\nimport AddArticle from './AddArticle'\r\nimport ArticleList from './ArticleList'\r\n\r\nconst {Header, Content, Footer, Sider} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\n\r\nfunction AdminIndex(props) { \r\n\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    const onCollapse = collapsed => {\r\n        setCollapsed(collapsed)\r\n    };\r\n    const handleClickArticle = e => {\r\n        console.log(e.item.props)\r\n        if (e.key === 'addArticle') {\r\n            props.history.push('/index/add')\r\n        } else {\r\n            props.history.push('/index/list')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout style={{minHeight: '100vh'}} className={'layout-container'}>\r\n            <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n                <div className=\"logo\"/>\r\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                    <Menu.Item key=\"1\">\r\n                        <AreaChartOutlined/>\r\n                        <span>工作台</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <DesktopOutlined/>\r\n                        <span>添加文章</span>\r\n                    </Menu.Item>\r\n                    <SubMenu\r\n                        key=\"sub1\"\r\n                        onClick={handleClickArticle}\r\n                        title={\r\n                            <span>\r\n                               <UserOutlined/>\r\n                                <span>文章管理</span>\r\n                             </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item key=\"addArticle\">添加文章</Menu.Item>\r\n                        <Menu.Item key=\"articleList\">文章列表</Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n                    <Menu.Item key=\"9\">\r\n                        <FileTwoTone/>\r\n                        <span>留言管理</span>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{background: '#fff', padding: 0}}/>\r\n                <Content style={{margin: '0 16px'}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item>后台管理</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div style={{padding: 24, background: '#fff', minHeight: 360}}>\r\n                        <div>\r\n                            <Route path=\"/index/\" exact component={AddArticle}/>\r\n                            <Route path=\"/index/add\" exact component={AddArticle}/>\r\n                            <Route path=\"/index/add/:id\" exact component={AddArticle}/>\r\n                            <Route path=\"/index/list\" component={ArticleList}/>\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>simpleLike.com</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default AdminIndex","import React from 'react';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Login from './Login'\r\nimport AdminIndex from './AdminIndex'\r\nfunction Main(){\r\n    return (\r\n            <Router basename=\"/admin\">\r\n                <Route path=\"/login/\" exact component={Login} />\r\n                <Route path=\"/index/\"  component={AdminIndex} />\r\n            </Router>\r\n    )\r\n}\r\nexport default Main","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Pages/Main';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n"],"sourceRoot":""}